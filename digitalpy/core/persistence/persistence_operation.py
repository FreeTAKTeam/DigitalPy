#######################################################
# 
# persistence_operation.py
# Python implementation of the Class PersistenceOperation
# Generated by Enterprise Architect
# Created on:      29-Aug-2022 5:07:40 PM
# Original author: ingo herwig <ingo@wemove.com>
# 
#######################################################


from typing import Any, List


class PersistenceOperation:
    """A PersistenceOperation instance holds data necessary to accomplish an operation
    on the persistent store.
    """
    criteria = None
    type = None
    values = None
    
    def __init__(self, type : Any, values : List, criteria : List) -> Any:
        """Constructor.
           @param $type The type of PersistentObject on which the operation should be
        executed
           @param $values An array of attribute/value pairs to apply
           @param $criteria An array of criteria instances to select the objects on
        which the operation will be executed
        """
        self.type = type
        self.values = values
        self.criteria = criteria

    def __to_string(self) -> Any:
        """_get a string representation of the operation
           @return _string
        """
        str = self.__class__.__name__+":type="+self.type+",values=("
        for key, val in self.values:
            str += key+"="+val+","
        
        str = str.strip(',')
        str += "),criteria=("
        for criteria in self.criteria:
            str += criteria.__toString()
        
        str = str.strip(',')
        str += ")"
        return str
    

    def get_criteria(self) -> Any:
        """_get criteria to match
           @return _array of _criteria instances
        """
        return self.criteria

    def get_type(self) -> Any:
        """_get the type of _persistent_object on which the operation should be executed
           @return _string
        """
        return self.type

    def get_values(self) -> Any:
        """_get values to apply
           @return _array of attribute/value pairs
        """
        return self.values