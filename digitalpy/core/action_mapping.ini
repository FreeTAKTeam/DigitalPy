; the exporter mechanism for the metrics controller
[MetricsExporter]
__class = opentelemetry.sdk.metrics.export.ConsoleMetricExporter

[TracingProvider]
__class = digitalpy.core.telemetry.impl.opentel_tracing_provider.OpenTelTracingProvider

[MetricsProvider]
__class = digitalpy.core.telemetry.impl.opentel_metrics_provider.OpenTelMetricsProvider

[Formatter]
__class = digitalpy.core.parsing.impl.default_formatter.DefaultFormatter

[Formats]
pickled = $pickledFormat

[PickledFormat]
__class = digitalpy.core.parsing.impl.pickled_format.PickledFormat

[Request]
__class = digitalpy.core.zmanager.impl.default_request.DefaultRequest

[ActionMapper]
; this is the default action mapper
__class = digitalpy.core.zmanager.impl.async_action_mapper.AsyncActionMapper

[AsyncActionMapper]
; this is a static reference to the async action mapper and should not be changed
__class = digitalpy.core.zmanager.impl.async_action_mapper.AsyncActionMapper

[SyncActionMapper]
; this is a static reference to the sync action mapper and should not be changed
__class = digitalpy.core.zmanager.impl.default_action_mapper.DefaultActionMapper

[event_manager]
__class = digitalpy.core.main.impl.default_event_manager.DefaultEventManager

[Response]
__class = digitalpy.core.zmanager.impl.default_response.DefaultResponse

[ObjectId]
__class = digitalpy.core.domain.object_id.ObjectId

[PersistenceFacade]
__class = digitalpy.core.persistence.impl.default_persistence_facade.DefaultPersistenceFacade
log_strategy = DefaultFileLogger

[DefaultFileLogger]
__class = digitalpy.core.impl.default_file_logger.DefaultFileLogger

[CotRouter]
__class = FreeTAKServer.components.core.COT_Router.cot_router_facade.CotRouter

[Subject]
__class = digitalpy.core.zmanager.subject.Subject

[IntegrationManager]
__class = digitalpy.core.zmanager.integration_manager.IntegrationManager

[RoutingWorker]
__class = digitalpy.core.zmanager.impl.default_routing_worker.DefaultRoutingWorker
