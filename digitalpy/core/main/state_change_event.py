#######################################################
# 
# state_change_event.py
# Python implementation of the Class StateChangeEvent
# Generated by Enterprise Architect
# Created on:      29-Aug-2022 11:38:53 AM
# Original author: ingo herwig <ingo@wemove.com>
# 
#######################################################
from typing import Any
from digitalpy.core.persistence.persistent_object import PersistentObject
from digitalpy.core.main.event import Event

class StateChangeEvent(Event):
    """StateChangeEvent signals a change of the state of a PersistentObject instance.
    """
    NAME = "StateChangeEvent"
    __new_value = None
    __object = None
    __old_value = None
    def __construct(self, object : PersistentObject, old_value : Any, new_value : Any) -> Any:
        """_constructor.
           @param $object _persistent_object instance
           @param $old_value _the old value of the state.
           @param $new_value _the new value of the state.
        """
        self.object = object
        self.old_value = old_value
        self.new_value = new_value

    def get_new_value(self) -> Any:
        """_get the new value.
           @return _mixed
        """
        return self.new_value

    def get_object(self) -> Any:
        """_get the object whose state has changed.
           @return _persistent_object instance
        """
        return self.object

    def get_old_value(self) -> Any:
        """_get the old value.
           @return _mixed
        """
        return self.old_value