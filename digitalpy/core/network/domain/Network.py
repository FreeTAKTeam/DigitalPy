#######################################################
# 
# Network.py
# Python implementation of the Class Network
# Generated by Enterprise Architect
# Created on:      28-Dec-2022 10:14:16 AM
# Original author: Giu Platania
# 
#######################################################


import sqlalchemy
from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

Base = declarative_base()

class Network(Base):
    __tablename__ = 'network_settings'
    id = Column(Integer, primary_key=True)
    ip_address = Column(String)
    subnet_mask = Column(String)
    default_gateway = Column(String)
    dns_servers = Column(String)

def configure_network_settings(ip_address=None, subnet_mask=None, default_gateway=None, dns_servers=None):
    engine = create_engine('sqlite:///network_settings.db')
    Base.metadata.create_all(engine)
    Session = sessionmaker(bind=engine)
    session = Session()

    network_settings = session.query(NetworkSettings).first()
    if not network_settings:
        network_settings = NetworkSettings()
        session.add(network_settings)

    if ip_address:
        network_settings.ip_address = ip_address
    if subnet_mask:
        network_settings.subnet_mask = subnet_mask
    if default_gateway:
        network_settings.default_gateway = default_gateway
    if dns_servers:
        network_settings.dns_servers = dns_servers

    session.commit()
    session.close()