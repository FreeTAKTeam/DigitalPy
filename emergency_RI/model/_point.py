#######################################################
# 
# point.py
# Python implementation of the CoT point
# Generated by Enterprise Architect
# Created on(FTSProtocolObject):      11-Feb-2020 11(FTSProtocolObject):08(FTSProtocolObject):07 AM
# Original author: Corvo
# 
#######################################################
# Latitude referred to the WGS 84 ellipsoid in degrees
from emergency_RI.model.model_constants.PointVariables import PointVariables as vars

from digitalpy.model.node import Node

class point(Node):

    def __init__(self, configuration, model, le=vars().LE, ce=vars().CE, hae=vars().HAE, lon=vars().LON, lat=vars().LAT):
        super().__init__(self.__class__.__name__, configuration, model)
        self.le = le
        self.ce = ce
        self.hae = hae
        self.lon = lon
        self.lat = lat

    # ce getter 
    def getce(self): 
        return self.ce 

    # ce setter 
    def setce(self, ce):
        self.ce=ce 

    # le getter 
    def getle(self): 
        return self.le 

    # le setter 
    def setle(self,le):  
        self.le=le

    # lat getter 
    def getlat(self):
        return self.lat 

    # lat setter 
    def setlat(self, lat):  
        self.lat=lat

        # lon getter 
    def getlon(self):
        return self.lon 

    # lon setter 
    def setlon(self,lon):
        self.lon=lon
  
    def gethae(self):
        return self.hae

    def sethae(self,hae):
        self.hae = hae